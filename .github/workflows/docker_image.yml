name: OrionIrc Build docker image

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [version-updated]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal

  build-and-publish-docker:
    name: Build and Publish Docker Image
    needs: test
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'repository_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract project version
        id: project-version
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            VERSION="${{ github.event.client_payload.version }}"
          else
            VERSION=$(grep -oP '<Version>\K[^<]+' src/Orion.Server/Orion.Server.csproj || echo "0.0.1")
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Build Docker image
        run: |
          docker build -t tgiachi/orionirc-server:latest -t tgiachi/orionirc-server:${{ steps.project-version.outputs.VERSION }} .

      - name: Push Docker image
        run: |
          docker push tgiachi/orionirc-server:latest
          docker push tgiachi/orionirc-server:${{ steps.project-version.outputs.VERSION }}
