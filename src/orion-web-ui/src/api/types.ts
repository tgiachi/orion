/**
 * Automatically generated interfaces from OpenAPI
 * Do not modify this file manually
 */

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/system/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the version information */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VersionInfoData"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/system/sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the sessions */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IrcUserSession"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/variables": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get all variables */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Record<string, never>;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Login to the server */
        post: operations["Login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/channels/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get all channels */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ChannelEntry"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/channels/{channel}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a channel by name */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    channel: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ChannelData"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/status/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the health status */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ChannelData: {
            name: string;
            founder?: string;
            topic?: string;
            /** Format: date-time */
            creation_time?: string;
            /** Format: date-time */
            topic_set_time?: string;
            topic_set_by?: string;
            key?: string | null;
            members?: components["schemas"]["ChannelMembership"][] | null;
            /** Format: int32 */
            user_limit?: number | null;
            /** Format: int32 */
            member_count?: number;
            invite_list?: string[] | null;
            is_secret?: boolean;
            is_private?: boolean;
            is_invite_only?: boolean;
            has_key?: boolean;
            has_user_limit?: boolean;
            is_moderated?: boolean;
            no_external_messages?: boolean;
            topic_protection?: boolean;
            have_topic?: boolean;
        };
        ChannelEntry: {
            name: string;
            /** Format: int32 */
            users: number;
            topic: string;
        };
        ChannelMembership: {
            nick_name?: string;
            is_operator?: boolean;
            has_voice?: boolean;
            /** Format: date-time */
            join_time?: string;
            prefix_nickname?: string | null;
        };
        IrcUserSession: {
            is_local?: boolean;
            remote_server_id?: string;
            session_id?: string;
            is_secure_connection?: boolean;
            endpoint?: string;
            remote_address?: string;
            /** Format: int32 */
            remote_port?: number;
            nick_name?: string;
            user_name?: string;
            real_name?: string;
            host_name?: string;
            v_host_name?: string | null;
            full_address?: string | null;
            /** Format: date-time */
            last_activity?: string;
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            last_ping_response?: string;
            is_user_sent?: boolean;
            is_nick_sent?: boolean;
            is_password_valid?: boolean;
            is_authenticated?: boolean;
            is_registered?: boolean;
            is_away?: boolean;
            away_message?: string;
            modes_string?: string | null;
            is_invisible?: boolean;
            is_operator?: boolean;
            receives_wallops?: boolean;
            is_registered_user?: boolean;
        };
        LoginRequest: {
            username: string;
            password: string;
        };
        LoginResponse: {
            is_success?: boolean;
            message?: string | null;
            access_token?: string | null;
            refresh_token?: string | null;
            /** Format: date-time */
            access_token_expires_at?: string | null;
            /** Format: date-time */
            refresh_token_expires_at?: string | null;
        };
        VersionInfoData: {
            app_name: string;
            code_name: string;
            version: string;
            git_hash: string;
            branch: string;
            build_date: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    Login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}

// Export all types
export * from "./types";
